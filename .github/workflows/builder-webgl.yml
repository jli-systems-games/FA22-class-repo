name: Build and Deploy for WebGL

on:
  push:
    branches:
      - main

jobs:
  #  testRunner:
  #    name: Tests all modes
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #      - name: Create LFS files
  #        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
  #      - name: Restore LFS cache
  #        uses: actions/cache@v2
  #        id: lfs-cache
  #        with:
  #          path: .git/lfs
  #          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
  #      - name: Git LFS Pull
  #        run: |
  #          git lfs pull
  #          git add .
  #          git reset --hard
  #      - name: Restore Library cache
  #        uses: actions/cache@v2
  #        with:
  #          path: Library
  #          key: Library-test-project
  #          restore-keys: |
  #            Library-test-project-
  #            Library-
  #      - uses: game-ci/unity-test-runner@v2
  #        id: testRunner
  #        with:
  #          testMode: all
  #      - uses: actions/upload-artifact@v2
  #        with:
  #          name: Test results (all modes)
  #          path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildForPlatforms:
    # needs: testRunner #excluded for now
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX #Build a maxOS build (intel)
          - StandaloneWindows #Build Windows  
          - StandaloneWindows64 #Build Windows 64-bit 
          - WebGL
    steps:
      # Check out the appropriate branch
      - name: Checkout the branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      #        lfs: true
      #      - name: Create LFS files
      #        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      #      - name: Restore LFS cache
      #        uses: actions/cache@v2
      #        id: lfs-cache
      #        with:
      #          path: .git/lfs
      #          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
      #      - name: Git LFS Pull
      #        run: |
      #          git lfs pull
      #          git add .
      #          git reset --hard
      # Cache the library folder
      - name: Cache the library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - name: Build the project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          # customParameters:
          versioning: Semantic
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  DeployToOutputs:
    needs: buildForPlatforms
    name: Deploy to Itch and Git Pages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target-platform-channel:
          - {platform: StandaloneWindows64, channel: windows}
          - {platform: StandaloneOSX, channel: osx}
          - {platform: WebGL, channel: web} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/download-artifact@v2
        with:
          name: build-${{ matrix.target-platform-channel.platform }}
          path: build

      #- name: Display structure of root files
      #  run: ls -R
      #  working-directory: build/WebGL
      - name: Deploy to Itch
        id: itch-deploy
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.JASON_ITCH_BUTLER_CREDENTIALS }}
          CHANNEL: ${{ matrix.target-platform-channel.channel }}
          ITCH_GAME: FA22-DEMOSCENE-SHOWCASE
          ITCH_USER: ovenfresh
          PACKAGE: build

      - name: Deploy GH Pages
        if: ${{ matrix.target-platform-channel.channel == 'web' }}
        id: gh-deploy
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build/WebGL
